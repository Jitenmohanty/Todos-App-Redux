{"version":3,"sources":["redux/actions/action-types.js","components/AddTodo.jsx","redux/actions/todo.js","components/DisplayCount.jsx","components/DisplayTodos.jsx","redux/reducers/todo-reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","connect","state","dispatch","addTodoAction","todo","type","payload","_ref","_useState","useState","title","description","id","_useState2","_slicedToArray","setTodo","_jsx","Container","children","Row","Col","md","Card","_jsxs","Body","Form","onSubmit","e","preventDefault","_objectSpread","v4","Group","className","Label","Control","placeholder","value","onChange","event","target","as","Button","variant","todos","todoReducer","length","deleteTodo","deleteTodoActions","DisplayCount","ListGroup","map","index","Item","onClick","size","initialState","rootReducer","combineReducers","arguments","undefined","action","console","log","concat","_toConsumableArray","filter","todoId","store","createStore","App","Provider","AddTodo","DisplayTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.f2a0a888.chunk.js","sourcesContent":["//Todo action types\r\n\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\n//User actions types","import React, { useState } from 'react'\r\nimport { Container, Col, Row, Card ,Form ,Button} from 'react-bootstrap';\r\nimport { addTodoAction } from '../redux/actions/todo';\r\nimport { connect } from 'react-redux';\r\nimport { v4 } from 'uuid';\r\n\r\nfunction AddTodo({addTodoAction}) {\r\n  const [todo , setTodo] =  useState({\r\n        title:'',\r\n        description:'',\r\n        id:''\r\n    })\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    addTodoAction({...todo,id:v4()})\r\n    setTodo({\r\n        title:'',\r\n        description:''\r\n    })\r\n  }\r\n\r\n    return (\r\n        <Container >\r\n            <Row >\r\n                <Col md={12}>\r\n                    <Card>\r\n                        <Card.Body >\r\n                            <h3>Add Todo Here</h3>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group className='mt-3'>\r\n                                    <Form.Label>Todo Title</Form.Label>\r\n                                    <Form.Control\r\n                                     type=\"text\"\r\n                                      placeholder=\"Enter title\"\r\n                                      value={todo.title}\r\n                                      onChange={event => setTodo({...todo ,title: event.target.value})}\r\n                                      />\r\n                                    <Form.Label>Todo Description</Form.Label>\r\n                                    <Form.Control as=\"textarea\" type=\"text\" placeholder=\"Enter description\"\r\n                                    value={todo.description}\r\n                                    onChange={event => setTodo({...todo ,description: event.target.value})}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Container className='text-center mt-3 '>\r\n                                    <Button variant='primary' type='submit'>\r\n                                        Add Todo\r\n                                    </Button>\r\n                                </Container>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>({\r\n\r\n})\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    addTodoAction:(todo)=>(dispatch(addTodoAction(todo)))\r\n})\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps) (AddTodo);\r\n","import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"./action-types\";\r\n\r\n//Add todo actions\r\nexport const addTodoAction =  (todo) =>({\r\n    type:ADD_TODO,\r\n    payload:todo\r\n})\r\n\r\nexport const deleteTodoActions = (id ) =>({\r\n    type:DELETE_TODO,\r\n    payload:id\r\n})\r\n\r\nexport const updateTodoActions = (todo , id) =>({\r\n    type:UPDATE_TODO,\r\n    payload:{todo:todo ,todoId:id}\r\n})","import React from 'react'\r\nimport {  Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nconst DisplayCount = ({todos}) => {\r\n  return (\r\n   <Card className='shadow-sm border border-0'>\r\n    <Card.Body>\r\n        <h4>Number of todos : {todos.length} </h4>\r\n    </Card.Body>\r\n   </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {todos:state.todoReducer};\r\n}\r\n\r\nexport default connect(mapStateToProps) (DisplayCount)\r\n","import React from 'react'\r\nimport { Col, Container, Row, Card, ListGroup, Button } from 'react-bootstrap';\r\nimport DisplayCount from './DisplayCount';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodoActions } from '../redux/actions/todo';\r\n\r\nfunction DisplayTodos({todos,deleteTodo}) {\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"mt-3 shadow-sm\">\r\n            <Card.Body>\r\n              <h3>All Todos are here </h3>\r\n              <DisplayCount />\r\n              <ListGroup>\r\n                {\r\n                  todos.map((todo, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <h4>{todo.title}</h4>\r\n                      <p>{todo.description}</p>\r\n                      <Button onClick={event=>deleteTodo(todo.id)} variant='danger' size='sm'>\r\n                        Delete\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  ))\r\n                }\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {todos:state.todoReducer};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    deleteTodo:(id)=>(dispatch(deleteTodoActions(id)))\r\n})\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps) (DisplayTodos);\r\n","import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"../actions/action-types\";\r\n\r\nconst initialState = [];\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            //add todo\r\n            console.log('It works fine',action.payload);\r\n            return [...state, action.payload];\r\n        case DELETE_TODO:\r\n            //delete todo\r\n            const newState = state.filter((todo) => todo.id !== action.payload)\r\n            return newState;\r\n        case UPDATE_TODO:\r\n            //update todo\r\n            const updatedState = state.map(todo => {\r\n                if (todo.id === action.payload.todoId) {\r\n                    todo.title = action.payload.todo.title;\r\n                    todo.description = action.payload.todo.description;\r\n                }\r\n                return todo;\r\n            })\r\n            return updatedState;\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers } from 'redux';\r\nimport todoReducer from './reducers/todo-reducer'\r\n\r\nconst rootReducer = combineReducers({todoReducer})\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import './App.css';\nimport { Container } from 'react-bootstrap';\nimport AddTodo from './components/AddTodo';\nimport DisplayTodos from './components/DisplayTodos';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container className='py-3'>\n        <AddTodo />\n        <DisplayTodos />\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\n  integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\"\n  crossorigin=\"anonymous\"\n/>\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}